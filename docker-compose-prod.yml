version: "3.8"

services:
  backend:
    container_name: backend
    build:
      context: backend
      dockerfile: dockerfile-prod
    environment:
      SPRING_DATASOURCE_URL: ${DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
      SPRING_PROFILES_ACTIVE: prod
    ports:
      - "8080:8080"
    depends_on:
      - redis
    command: ["java", "-jar", "/app.jar"]
    volumes:
      - ./backend:/app
      - ./backend/target/classes:/app/classes
  
  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: dockerfile
    command: [ "npm", "run", "dev" ]
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
      - ./frontend/.npm/_cacache:/frontend/.npm/_cacache
      - build_folder:/frontend/dist
    ports:
      - "5173:5173"
    tty: true
    environment:
      - npm_config_cache=/frontend/.npm/_cacache
    depends_on:
      - backend
    
  redis:
    hostname: redis
    container_name: redis
    image: redis:latest
    ports:
      - 6380:6379
    restart: always

  nginx:
    container_name: nginx
    build:
      context: devops/nginx/prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./devops/nginx/prod/nginx_develop.conf:/etc/nginx/nginx.conf
      - ./devops/nginx/certbot/conf:/etc/letsencrypt
      - ./devops/nginx/certbot/www:/var/www/certbot
      - build_folder:/var/www/frontend
    depends_on:
      - backend
    expose:
      - '80'
      - '443'
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./devops/nginx/certbot/conf:/etc/letsencrypt
      - ./devops/nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

volumes:
  mysql_data:
  build_folder:
